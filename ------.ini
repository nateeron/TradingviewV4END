// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Naruephat
//171.0
//TAN 26/05/2565 19.16
//@version=5
strategy("Grid Trading V.3.4 Action Bot @Naruephat", process_orders_on_close=true, overlay=1,   pyramiding = 10000 , default_qty_type = strategy.cash , default_qty_value = 0 , initial_capital = 3000 ,  commission_type = strategy.commission.percent , commission_value = 0.1  )


//{"price": "1.3371","side": "sell", "amount":"@8", "symbol": "FTMUSDT", "passphrase": "M335599","strategy":"CDC V.2 2022 Multi MA Action Bot @Naruephat 23/3/65"} 
// เอาตรงนี้ไปใส่ในข้อความตอนตั้งแจ้งเตือน
name_startegy = 'Grid Trading V.3'
Replay = input.bool(false,'Replay') 
Show_H_L = input.bool(false,'Line High Low') 
passphase ='"c63463e8-01b2-52c8-a852-f0aa6e0db56e"}'
Text_Alert = '{{strategy.order.alert_message}}' +passphase
copy = input.string( defval= Text_Alert ,    title="Copy Alert", inline = '00'  )



//---------------------------- การสั่งซื้อด้วยจำนวนเหรียญ ซื้อขาย 100% ของพอร์ต เพื่อให้ match การซื้อกับ Binace  ----------------------------------------------------------------
//เช่น
//FTM = #
//XRP = #
//BNB = #.###
//ETH = #.####
//BTC = #.#####

tool ='FTM = # \nXRP = # \nBNB = #.### \nETH = #.#### \nBTC = #.#####'
GS = '<<<<<<[ Set Order Format ]>>>>>>'
use_order = input.bool(true,'use Order ',group =  GS ,inline = 'or')
order_Format = input.string('#.###',' Format' , options  = ['#','#.#','#.##','#.###','#.####','#.#####','#.######'] ,group =  GS  ,inline = 'or',tooltip  = tool)

fV_Order = false //input.bool(false,'fixed Value Order Alert' ,inline = 'FV' ,group =  GS ) 
fV_qty  = 14//input.float(14, "Order Val $ for Bot" ,step = 0.01  ,  minval=0, inline = 'FV1' ,group =  GS ) 



g1 = '======= Setting ======='
sour_AT   = input.source(close, 'source' ,group = g1,inline = 'T15')
qty_  =input.float(14, "Order Val $ " ,step = 1  ,  minval=0,group = g1)



tp      = input.float(1.3,  " Take profit %",step = 0.1 ,  minval=0.01,group = g1)
Low_buy = input.float(0.4,  "Low buy %",step = 0.1 ,  minval=0.01,group = g1)

//Start_price  = (close+tp  / 100 )* Low_buy //input.float(1.5 , "Start price", step = 0.01  , minval=0,group = g1)
MA = 'Settings Line moving average' 
Use_tren =false// input.bool(false , 'Use Tren' ,group = MA ,inline = 'L1')
Show_Line = false//input.bool(false , 'Show Line' ,group = MA ,inline = 'L1')

sour   =hlcc4// input.source(hlcc4, 'source' ,group = MA,inline = 'T15')
tren_type  ="ema" // input.string("ema", title="type f", options=["sma","ema","wma"  ],inline = 'T15',group = MA)

len_L1   =1// input.int(1 ,'MA 1',minval = 0,inline = 'T1' ,group = MA)
lenBack_1   =0// input.int(0 ,'Bf',minval = 0,inline = 'T1',group = MA)
Color_tren1 =color.red // input.color(color.red , 'Color' ,group = MA ,inline = 'T1')

len_L2   = 12//input.int(350 ,'MA 12',minval = 0,inline = 'T2',group = MA)
lenBack_2   = 0//input.int(0 ,'Bs',minval = 0,inline = 'T2',group = MA)
Color_tren2 = color.orange  //input.color(color.orange , 'Color' ,group = MA ,inline = 'T2')

len_L3   = 26//input.int(1000 ,'MA 26',minval = 0,inline = 'T3',group = MA)
lenBack_3   =0// input.int(0 ,'Bs',minval = 0,inline = 'T3',group = MA)
Color_tren3 = color.green//input.color(color.green , 'Color' ,group = MA ,inline = 'T3')



tren_type4_offset = 0
// returns ma value by type and length
ma(src, type, length) =>
    len = math.max(1,length)
    type == "sma"? ta.sma(src, len) : 
         type == "ema"? ta.ema(src, len) : 
             type == "wma"? ta.wma(src, len) : 
                 type == "vwma"? ta.vwma(src, len) : 
                     type == "swma"? ta.swma(src) : 
                         type == "hma"? ta.hma(src, len) : 
                             type == "rma"? ta.rma(src, len) : 
                                 type == "linreg"? ta.linreg(src, len, tren_type4_offset) : na




sma7 = ma(sour,tren_type,len_L1  )[lenBack_1]
sma25 = ma(sour,tren_type,len_L2  )[lenBack_2]
sma200 = ma(sour,tren_type,len_L3  )[lenBack_3]

plot(Show_Line ? sma7  : na , color = color.new(Color_tren1,0) , title = 'sma7' )
plot1 = plot(Show_Line ? sma25 : na , color = color.new(Color_tren2,0) , title = 'sma25' )
plot2 = plot(Show_Line ? sma200: na , color = color.new(Color_tren3,0) , title = 'sma200' )

fill(plot1, plot2, color = sma25 > sma200 ? color.new(color.green, 90) :color.new(color.red, 90)  )

//เรียกใช้  library
import Naruephat/Cayoshi_Library/3 as fuLi 

//กำหนดระยะเวลา หรือ แท่งบาร์ในการ Backtest
//---------------------------------------------------------------------------------------------------------------
G0 = 'Set Test Date'                                                                                                                    
i_dateFilter    = input.bool(false,  "═════ Date Range Filtering ═════" ,group = G0)
i_fromYear      = input.int(2022,   "From Year",    minval = 1900 ,inline = 'd1',group = G0)
i_fromMonth     = input.int(5,      "From Month",   minval = 1, maxval = 12,inline = 'd2',group = G0)
i_fromDay       = input.int(28,      "From Day",     minval = 1, maxval = 31,inline = 'd3',group = G0)
min_F = input.int(00,'From HH', minval = 0, maxval = 24 ,group = G0,inline = 'd4')
sec_F= input.int(00 ,'From mm', minval = 0, maxval = 60 ,group = G0,inline = 'd5')

i_toYear        = input.int(2025,   "To Year",      minval = 1900,inline = 'd1',group = G0)
i_toMonth       = input.int(12,      "To Month",     minval = 1, maxval = 12,inline = 'd2',group = G0)
i_toDay         = input.int(31,      "To Day",       minval = 1, maxval = 31,inline = 'd3',group = G0)



min_T = input.int(00,'To HH', minval = 0, maxval = 24,group = G0,inline = 'd4')
sec_T= input.int(00 ,'To mm', minval = 0, maxval = 60,group = G0,inline = 'd5')

Back_Test = input.bool(false , '═════ Bar Back Test ═════')
Back_Test_bar_start = input.int(0, 'count back bar start',inline = 'btes' , minval = 0)
Back_Test_step_start =  input.int(100 , 'count step start'  ,inline = 'btes' , minval = 0)
Back_Test_bar_end = input.int(0 , 'count back bar end',inline = 'bte' , minval = 0)
Back_Test_step_end =  input.int(100 , 'count step end'  ,inline = 'bte' , minval = 0)
              
size_is =  input.string('auto','size table right', options = ['auto','tiny','small','normal'] , inline = 'Lnets') 
size_ = size_is == 'auto' ? size.auto :
          size_is == 'tiny' ?  size.tiny :    
           size_is == 'small' ? size.small : 
             size_is == 'small' ? size.normal :  size.auto
             

count_backtest_bar_start = Back_Test ?  ( Back_Test_bar_start * Back_Test_step_start) : 0
count_backtest_bar_end = Back_Test ? last_bar_index  - ( Back_Test_bar_end* Back_Test_step_end) : last_bar_index
BarBackTEST = bar_index >= count_backtest_bar_start and bar_index <= count_backtest_bar_end 
maxbar = last_bar_index / Back_Test_step_start
fromDate        = timestamp(i_fromYear, i_fromMonth, i_fromDay, min_F, sec_F)                                                                 
//fromDate        = i_datesss                                                              
toDate          = time < timestamp(i_toYear, i_toMonth, i_toDay, min_T, sec_T) ? time :  timestamp(i_toYear, i_toMonth, i_toDay, min_T, sec_T)      
date_start_entry    = i_dateFilter ? fromDate < time ? time : fromDate : time
var begin           = date_start_entry
days                = (toDate - begin) / (24 * 60 * 60 * 1000) 
trad_per_day = strategy.closedtrades / days
net = (( qty_ /100) * tp) * trad_per_day
mess1 = str.tostring(days, "#.0 days |") + str.tostring(days/30, "0.0 month  | ")  + str.tostring( trad_per_day, "0.0 ") + 'ครั้งต่อวัน'
mess1_2 = 'AVG,Net = (( qty_ /100) * tp) * trad_per_day \n AVG,Net | '+str.tostring(net, "0.0 ")+ '$ | '+str.tostring(qty_ / net, "0 ")+  '= 1 Order  |' +str.tostring(net*34, "0.0 ")  +'บาท ต่อวัน'
mess2 = Back_Test ?   count_backtest_bar_start > last_bar_index ? ('start ' +   str.tostring( count_backtest_bar_start,'#,###.##') +'....Over Bar' +' MAX:'+ str.tostring(maxbar,'#,###') )  : ('start ' +   str.tostring( count_backtest_bar_start,'#,###.##') +' MAX:'+ str.tostring(maxbar,'#,###') )   :    'start 0 Bar  MAX:'+ str.tostring(maxbar,'#,###')
mess3 = ( Back_Test ?  ('end ' + str.tostring(last_bar_index ,'#,###.##') +' - ' + str.tostring( Back_Test_bar_end* Back_Test_step_end) + ' = ' + str.tostring(count_backtest_bar_end ,'#,###.##') )  : 'end ' +str.tostring(count_backtest_bar_end ,'#,###.##') ) + ' Bar'
 
table table_countbar = table.new(position.bottom_right, 1,50 ,border_color = color.orange)
table.cell(table_countbar,0, 0, mess1,text_size = size_ , bgcolor =color.new(color.blue,80),text_color =color.new(color.white,0) ) 
table.cell(table_countbar,0, 1, mess1_2,text_size = size_ , bgcolor =color.new(color.blue,80),text_color =color.new(color.white,0) ) 
table.cell(table_countbar, 0, 2, mess2, text_size = size_ ,bgcolor = color.new(color.red,80),text_color =  count_backtest_bar_start > last_bar_index ? color.new(color.red,0) : color.new(color.white,15)  ) 
table.cell(table_countbar, 0, 3, mess3, text_size = size_ ,bgcolor = color.new(color.red,80),text_color =color.new(color.white,0) ) 
Back_test = BarBackTEST  and (not i_dateFilter or (time >= fromDate and time <= toDate))
//Back_test = fuLi.Count_Bar_Back_Test( Back_Test , Back_Test_bar_start, Back_Test_step_start, Back_Test_bar_end,  Back_Test_step_end , i_dateFilter, i_fromYear, i_fromMonth, i_fromDay, i_toYear, i_toMonth, i_toDay )        
//---------------------------------------------------------------------------------------------------------------
bgcolor((Back_test  ) ?   na : color.new(color.red,90) )

//เงินทุนเริ่ม
initial_capital = strategy.initial_capital

per(pcnt) =>
    strategy.position_size != 0 ? math.round(pcnt / 100 * strategy.position_avg_price / syminfo.mintick) : float(na)

price_Buy_Percen_Low(pri) =>
    pri - (pri / 100) * Low_buy

price_Buy_Percen_up(pri) =>
    pri + (pri / 100) * Low_buy  

var Price_Action = 0.

 

var p1 = 0
buy_up = false
buy_down = false
lower = price_Buy_Percen_Low(Price_Action)
uper = price_Buy_Percen_up(Price_Action) 
con_Start  = true
high_Start =  ta.highest(high ,20)
var Price_Start_ = 0.
if Back_test 
    Price_Start_ :=  high_Start
//plotchar(Back_test, char = '1', size = size.normal, color = color.orange)
plot(Price_Start_ ,color = color.new(color.white,50) )
if  Back_test and con_Start and Price_Action == 0 and bar_index > 20 
    Price_Action := Price_Start_
    pstart = (Price_Action / 100) * 0.1
    lower :=  price_Buy_Percen_Low(Price_Action-pstart)
    uper := price_Buy_Percen_up(Price_Action) 


var price_entry = 0. 
action = sour_AT > uper  or sour_AT < lower

var start = 0

if  lower > sour_AT
    if start == 1 and price_Buy_Percen_Low(price_entry)  > sour_AT
    
        Price_Action := price_Buy_Percen_Low(price_entry)
        buy_down := true
    else if start == 0
        Price_Action := lower
        buy_down := true
        start := Back_test ? 1 : 0

bool newDay = ta.change(time("M"))
bgcolor(newDay ? color.silver : na)


var h = 0.
if h < high
    h := high

var high_low = 0.
var raya = 0.
raya := h - low
var raya_ = 0.
if  raya > raya_
    raya_ := h - low
    high_low := low



H_L = (((high_low - h  ) / h)*100)*-1
order_doi = (H_L) / Low_buy
val_o = order_doi * qty_
if  uper < sour_AT
    Price_Action := uper//เทียบราคา


con_B =    sma25 > sma200 and sma7 > sma200
con_S =    sma25 < sma200 and sma7 < sma200



Open_Long = false 
con_Buy = ( buy_down )

var Sum_Qty_order = strategy.equity / qty_
if Replay
    Open_Long :=   con_Buy   //and ( Use_tren ? con_B : true ) //ta.change(High_price) != 0
else
    Open_Long := Back_test and   con_Buy //and ( Use_tren ? con_B : true ) //ta.change(High_price) != 0

///////////////////////////////////////////////////////////////////////////////////////////
var Sum_Qty = strategy.equity //เงินทุนเริ่มต้น

var order_val = 0
var order = 0. //จำนวน Order
var check_1 = 0 //เช็กให้ทำงานรอบเดียว

var eqty_sum = 0.
if  Open_Long  and check_1 == 0

    order :=  str.tonumber(str.tostring(  qty_/sour_AT,format = order_Format) )
    check_1 := 1
    

if  ta.change(strategy.closedtrades-1) 
    Sum_Qty := strategy.closedtrades.exit_price(strategy.closedtrades-1) * order
    check_1 := 0
    start := 0
    Price_Action :=  strategy.closedtrades.exit_price(strategy.closedtrades-1)
 
////////////////////////////////////////////////////////////////////////////////////////
var str_Order = ''
if fV_Order 
    str_Order := '@'+ str.tostring(fV_qty)
else
    str_Order := '@'+ str.tostring(order)

var count_Buy = 0
var price_Profit = 0.



if con_Buy
    
    Sum_Qty_order -= Sum_Qty_order>0 ? 1 : 0
    
    count_Buy += Sum_Qty_order>0 ? 1 : 0
    price_Profit :=  close + ((close/ 100 )* tp)

bgcolor(Sum_Qty_order<=0  ? color.new(color.orange,95): na)
//plot(Sum_Qty_order , color = color.new(color.yellow,0) , title = '' )
message_openlong = '{"side":"buy","amount":"'+str_Order+'","joint_limit":"sell","price_limit":"'+str.tostring(price_Profit,format = order_Format)+'","symbol":"'+syminfo.ticker+'","price":"' + str.tostring(sour_AT)+'","strategy":"'+name_startegy+'","passphrase":'
message_closelong = '{"side":"sell","amount":"'+str_Order+'","joint_limit":"sell","symbol":"'+syminfo.ticker+'","price":"' + str.tostring(sour_AT)+'","strategy":"'+name_startegy+'","passphrase":'

// Sum order top
var value_entry = 0
var sum_entry = 0
if  Open_Long
    value_entry += 1
if ta.change(strategy.closedtrades-1)
    Sum_Qty_order += strategy.closedtrades-strategy.closedtrades[1]
    sum_entry := value_entry > sum_entry ? value_entry : sum_entry
    value_entry := 0
    
    
    
    

if use_order and Sum_Qty_order>0
    //strategy.entry("B", strategy.long ,when =  Open_Long , alert_message = message_openlong)
    strategy.entry("B", strategy.long ,when =   Open_Long , qty = order , alert_message = message_openlong , comment  = str.tostring(count_Buy))
else
    strategy.entry("B", strategy.long ,when =  Open_Long  , alert_message = message_openlong)
strategy.exit("tp", profit = per(tp) , alert_message = message_closelong ,comment = 'S' )
 
   
var closeprice_entry = 0.
if Open_Long
    closeprice_entry := close
line_tp = closeprice_entry + ((closeprice_entry/100)*tp)
n_Bar = ta.barssince(Open_Long)
plot(n_Bar[15] > n_Bar[1]?  line_tp : na ,color = color.new(color.green,0),style = plot.style_linebr  )
plotarrow(Open_Long and  Sum_Qty_order>0 ? -1 :  na, colordown = color.green,maxheight =70)
//plotchar(n_Bar[15] > n_Bar[1] strategy.position_size >0 , char = '1', size = size.normal, color = color.orange)
////////////////////////////////// Plot ////////////////////////////////





//แสดงผล Backtest
// ==========================================================================================================================================================================================================================================================
show_Net = input.bool(true,'Show Net', inline = 'Lnet')
position_ = input.string('bottom_left','Position', options = ['top_right','middle_right','bottom_right','top_center','middle_center','bottom_center','middle_left','bottom_left'] , inline = 'Lnet')
size_i = input.string('auto','size', options = ['auto','tiny','small','normal'] , inline = 'Lnet') 
color_Net = input.color(color.blue,"" , inline = 'Lnet')
fuLi.NetProfit_Show(show_Net , position_ , size_i,  color_Net )

price_entry := strategy.opentrades.entry_price(strategy.opentrades-1) 
plot( price_entry, color = color.new(color.aqua,0) , title = 'High_price' )


tra = 90

qty_top = -(qty_ * sum_entry )
THB = 35
fee = 0.2 // Buy and sell 0.1 % * 2
x1 = strategy.opentrades
x2 = strategy.opentrades * qty_
table t_Sum = table.new( position.top_right, 15,4 ,border_color = color.black, border_width = 1 )
table.cell(t_Sum, 0,1, 'ซื้อต่อเนื่อง',text_size = size_ , bgcolor = color.new(color_Net,tra),text_color =color.new(color.white,0)  ) 
table.cell(t_Sum, 1,1,  'เป็นเงิน'  ,text_size = size_ , bgcolor = color.new(color_Net,tra),text_color =color.new(color.white,0)  ) 
table.cell(t_Sum, 2,1, 'ขนาด order',text_size =size_  , bgcolor = color.new(color_Net,tra),text_color =color.new(color.white,0)  ) 
table.cell(t_Sum, 3,1, 'เงินทุนเริ่ม',text_size = size_  , bgcolor = color.new(color_Net,tra),text_color =color.new(color.white,0)  ) 
table.cell(t_Sum, 4,1, 'Open',text_size = size_ , bgcolor = color.new(color_Net,tra),text_color =color.new(color.white,0)  ) 
table.cell(t_Sum, 5,1, '$',text_size = size_ , bgcolor = color.new(color_Net,tra),text_color =color.new(color.white,0)  ) 


table.cell(t_Sum, 0, 2, str.tostring(sum_entry,'#,###')+ ' ครั้ง',text_size = size_ ,  bgcolor = color.new(color.black,30),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 1, 2, str.tostring(qty_top,'#,###.##') + '$|'+str.tostring(qty_top*THB,'#,###.##') +'บ.',text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 2, 2,  str.tostring(qty_,'#,###.##') + '$|'+str.tostring(qty_*THB,'#,###.##') +'บ.',text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.white,0) ) 
table.cell(t_Sum, 3, 2, str.tostring(initial_capital,'#,###.##') + '$|'+str.tostring(initial_capital*34,'#,###.##') +'บ.',text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 4, 2,  str.tostring(x1,'#,###.##') ,text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.red,0)) 
table.cell(t_Sum, 5, 2,  str.tostring(x2,'#,###.##')  + '$|'+str.tostring(x2*THB,'#,###.##') +'บ.',text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.red,0)) 

//str.tostring((initial_capital/net)/365,'#,###.##') + ' ปี คืนทุน
net_perorder = (qty_ / 100 ) * (tp-fee)
clos_value = strategy.closedtrades * net_perorder
table.cell(t_Sum, 0, 3,'',text_size = size_ ,  bgcolor = color.new(color.black,100),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 1, 3,'',text_size = size_  , bgcolor = color.new(color.black,100),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 2, 3,'sell Order '+ str.tostring(strategy.closedtrades,'#,###.##')+'ไม้',text_size = size_  , bgcolor = color.new(color.orange,80),text_color =color.new(color.white,0) ) 
table.cell(t_Sum, 3, 3, 'กำไร: '+str.tostring(clos_value,'#,###.##')+'$ |'+str.tostring(clos_value*THB,'#,###.##')+'B.' ,text_size = size_  , bgcolor = color.new(color.orange,80),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 4, 3, 'H-L MAX : ',text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.white,0)) 
table.cell(t_Sum, 5, 3, str.tostring(H_L,'#.##')+'% | '+ str.tostring(order_doi,'#.##') + 'ไม้ | '+ str.tostring(val_o,'#,###.##') + ' $ | '+ str.tostring(val_o*THB,'#,###.##')+ ' บ.'  ,text_size = size_  , bgcolor = color.new(color.black,30),text_color =color.new(color.white,0)) 



plot(Show_H_L ? high_low : na  ,color = color.yellow)    
plot(Show_H_L ? h : na ,color = color.white)








